# migrations/versions/fc2020131868_add_file_handling_logic_and_update_.py
"""add file handling logic and update user model (Restored: User & FitFile)

Revision ID: fc2020131868
Revises: None
Create Date: <Your Create Date Here>

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'fc2020131868'
# Keep as None since it's the first logical migration script
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create User table
    op.create_table('user',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('username', sa.String(length=80), nullable=False),
        sa.Column('password_hash', sa.String(length=256), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=True), # Default added in model
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('username') # Ensure username is unique
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    # Create FitFile table (Restored)
    op.create_table('fit_file',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('original_filename', sa.String(length=255), nullable=False),
        sa.Column('storage_path', sa.String(length=512), nullable=False),
        sa.Column('upload_timestamp', sa.DateTime(), nullable=True), # Default added in model
        sa.Column('activity_date', sa.Date(), nullable=True),
        sa.Column('filesize', sa.Integer(), nullable=True),
        sa.Column('processing_status', sa.String(length=50), nullable=True), # Default added in model
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('storage_path')
    )
    with op.batch_alter_table('fit_file', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_fit_file_user_id'), ['user_id'], unique=False)
    # ### end Alembic commands ###
    pass


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Downgrade logic should drop the tables created in upgrade()

    # Drop FitFile table (Restored)
    with op.batch_alter_table('fit_file', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_fit_file_user_id'))
    op.drop_table('fit_file')

    # Drop User table
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
    op.drop_table('user')
    # ### end Alembic commands ###
    pass